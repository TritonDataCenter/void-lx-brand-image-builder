#!/usr/bin/env bash
#
# Install Void Linux into a directory, modify the installation, then tar it up.
#

#
# Copyright 2020 Joyent Inc.
#

if [[ -n $TRACE ]]; then
	export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
	set -o xtrace
fi

set -euo pipefail

GUESTTOOLS=guesttools
BUILD_DATE=$(date +%Y%m%d)

export PATH=$PATH:/sbin:/bin

fatal() {
	echo "$@" >&2
	exit 1
}

usage() {
	cat <<-EOF

	Install and modify Void in a given directory in a given directory using a given mirror

	Usage:
	  $0 -a <arch> -d <dir> -m <mirror> -i <img> -p <name> -D <desc> -u <url>

	Example:
	  $0 -a x86_64-musl -d /data/void -m https://alpha.de.repo.voidlinux.org -i void -p "Void Linux" -D "Void 64-bit lx-brand image." -u https://docs.joyent.com/images/container-native-linux

	OPTIONS:
	  -a <arch>     Void Linux arch to install - must be 'x86_64' (glibc) or 'x86_64-musl' (musl)
	  -D <desc>     A description for the image. This is used in the image manifest and the /etc/product file.
	  -d <dir>      A path to the install directory
	  -h            Show this message and exit
	  -i <img>      The name of the image. This is used for naming the tarball.
	  -m <mirro>    A URL for the desired archive mirror
	  -p <name>     The proper name of the image. Use quotes. This is used in the MOTD and /etc/product file.
	  -u <url>      A URL to the image docs [optional]

	EOF
}

ARCH=
INSTALL_DIR=
MIRROR=
IMAGE_NAME=
NAME=
DESC=
DOCS=

while getopts 'ha:d:m:i:p:D:u:' OPTION
do
	case $OPTION in
		h)
			usage
			exit 0
			;;
		a)
			ARCH=$OPTARG
			;;
		d)
			INSTALL_DIR=$OPTARG
			;;
		m)
			MIRROR=${OPTARG%/}
			;;
		i)
			IMAGE_NAME=$OPTARG
			;;
		p)
			NAME=$OPTARG
			;;
		D)
			DESC=$OPTARG
			;;
		u)
			DOCS=$OPTARG
			;;
		*)
			usage
			exit 1
			;;
	esac
done


[[ -n $ARCH ]]        || fatal 'Error: missing arch (-a) value x86_64 || x86_64-musl'
[[ -n $INSTALL_DIR ]] || fatal 'Error: missing install directory (-d) value'
[[ -n $MIRROR ]]      || fatal 'Error: missing mirror (-m) url value'
[[ -n $IMAGE_NAME ]]  || fatal 'Error: missing image name (-i) value'
[[ -n $NAME ]]        || fatal 'Error: missing proper name (-p) value'
[[ -n $DOCS ]]        || DOCS='https://docs.joyent.com/images/container-native-linux'

TARGET=$PWD/$IMAGE_NAME-$BUILD_DATE.tar.gz

# make absolute dir
if [[ ${INSTALL_DIR:0:1} != '/' ]]; then
	INSTALL_DIR=$PWD/$INSTALL_DIR
fi

echo "==> Installing Void into $INSTALL_DIR"

if [[ -d $INSTALL_DIR ]]; then
	echo "====> Found previous chroot. Deleting and creating a new one."

	for dir in proc sys; do
		fulldir=$INSTALL_DIR/$dir
		if mount | grep -q "$fulldir"; then
			umount "$fulldir"
		fi
	done

	rm -rf "$INSTALL_DIR"
fi
mkdir -p "$INSTALL_DIR"

echo "===> Getting Void ..."

if [[ ! -d tmp/ ]]; then
	echo "===> creating tmp/ directory"
	mkdir tmp
fi

cd tmp/

# download static xbps tools to install the base install
wget -O - "$MIRROR/static/xbps-static-latest.$(uname -m)-musl.tar.xz" | tar Jx
bindir=$PWD/usr/bin

echo "==> Adding void keys"
mkdir -p "$INSTALL_DIR/var/db/xbps/keys"
cp ../keys/* "$INSTALL_DIR/var/db/xbps/keys/"

echo "===> Installing Void base from $MIRROR"
#  "--repository=$MIRROR/current/musl" \
XBPS_ARCH=$ARCH "$bindir/xbps-install.static" -yMU \
	"--repository=$MIRROR/current" \
	-r "$INSTALL_DIR" \
	base-minimal \
	ca-certificates \
	bash \
	jq \
	curl \
	gettext \
	less \
	man \
	openssh \
	tzdata \
	vim \
	pam \
	wget \
	ncurses \
	iproute2 \
	iputils

chroot "$INSTALL_DIR" xbps-reconfigure -a

echo "==> Removing unecessary runit services"
rm -f "$INSTALL_DIR/etc/runit/core-services/01-static-devnodes.sh"
rm -f "$INSTALL_DIR/etc/runit/core-services/02-kmods.sh"
rm -f "$INSTALL_DIR/etc/runit/core-services/02-udev.sh"
rm -f "$INSTALL_DIR/etc/runit/core-services/03-filesystems.sh"

echo "==> linking required runit services"
chroot "$INSTALL_DIR" ln -s /etc/sv/sshd /etc/runit/runsvdir/default

echo "==> removing agetty from default"
for i in {1..6}; do
	touch "$INSTALL_DIR/etc/sv/agetty-tty$i/down"
	rm -rf "$INSTALL_DIR/etc/runit/runsvdir/default/agetty-tty$i"
done

# Set random root pw
chroot "$INSTALL_DIR" passwd -d root

echo "==> Setting TZ to UTC"
chroot "$INSTALL_DIR" ln -sf /usr/share/zoneinfo/UTC /etc/localtime

echo "==> Disabling PasswordAuthentication"
sed -ri s/^#?PasswordAuthentication\ no/PasswordAuthentication\ no/  -i "$INSTALL_DIR/etc/ssh/sshd_config"
sed -ri s/^#?PasswordAuthentication\ yes/PasswordAuthentication\ no/ -i "$INSTALL_DIR/etc/ssh/sshd_config"

echo "==> Creating /etc/motd"
cat << MOTD > "$INSTALL_DIR/etc/motd"
   __        .                   .
 _|  |_      | .-. .  . .-. :--. |-
|_    _|     ;|   ||  |(.-' |  | |
  |__|   \`--'  \`-' \`;-| \`-' '  ' \`-'
                   /  ;  Instance ($NAME $BUILD_DATE)
                   \`-'   $DOCS

MOTD

echo "==> Creating /etc/product file"
cat << PRODUCT > "$INSTALL_DIR/etc/product"
Name: Joyent Instance
Image: $NAME $BUILD_DATE
Documentation: $DOCS
Description: $DESC
PRODUCT

cat "$INSTALL_DIR/etc/motd" "$INSTALL_DIR/etc/product" >  "$INSTALL_DIR/etc/void-release"

echo "==> Installing Guest tools in $INSTALL_DIR"
echo "====> Running ./install.sh -i $INSTALL_DIR"
(
	cd "../$GUESTTOOLS"
	./install.sh -i "$INSTALL_DIR"
)

echo "==> Saving installation as $TARGET. This may take a few minutes."
cd "$INSTALL_DIR"
tar czf "$TARGET" --exclude-from=../exclude.txt ./

echo "==> Installation complete!"
echo "==> $TARGET"

exit 0
